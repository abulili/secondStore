package com.atguigu.mybatis_plus_demo.controller;

import com.atguigu.mybatis_plus_demo.entity.Car;
import com.atguigu.mybatis_plus_demo.entity.Store;
import com.atguigu.mybatis_plus_demo.mapper.StoreMapper;
import com.atguigu.mybatis_plus_demo.service.StoreService;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.sql.Timestamp;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/store")
public class StoreController {
    @Autowired
    private StoreService storeService;
    @Resource
    private StoreMapper storeMapper;
//    搜索框
    @PostMapping("/serach")
    @ResponseBody
    public List<Store> getSerach(@RequestBody Map<String, Object> data) {
//        没搜出来
        String keywords = (String) data.get("serach");
        QueryWrapper<Store> queryWrapper = new QueryWrapper<>();
//        queryWrapper.like("sTitle", keywords);
        queryWrapper.or(i -> i.like("sTitle", keywords));
        queryWrapper.or(i -> i.like("sContent", keywords));
        List<Store> result = storeMapper.selectList(queryWrapper);
        return result;
    }
//    查
    @PostMapping("/listId")
    @ResponseBody
    public List<Store> getId(@RequestBody Map<String, Object> data) {
        int sid = (int) data.get("sid");
        Map<String,Object> map = new HashMap<>();
        map.put("sid", sid);
        return storeMapper.selectByMap(map);
    }
//    查某个用户所有的商品
    @PostMapping("/listUser")
    @ResponseBody
    public List<Store> getUser(@RequestBody Map<String, Object> data) {
        int suid = (int) data.get("suid");
        Map<String,Object> map = new HashMap<>();
        map.put("suid", suid);
        return storeMapper.selectByMap(map);
    }
//
    @PostMapping("/list")
    @ResponseBody
    public List<Store> getList() {
        List<Store> stores = storeMapper.selectList(null);
        return stores;
    }
//    范围
    @PostMapping("/listPrice")
    @ResponseBody
    public List<Store> getPrive(@RequestBody Map<String, Object> data) {
        String l = (String)data.get("l");
        String r = (String)data.get("r");
        QueryWrapper<Store> queryWrapper = new QueryWrapper<Store>();
        queryWrapper.between("sprice",l,r);
        List<Store> stores = storeMapper.selectList(queryWrapper);
        return stores;
    }
//    增
    @PostMapping("/addStore")
    @ResponseBody
    public int addStore(@RequestBody Store data) {
        System.out.println(data);
        Store st = new Store();
        st.setStitle(data.getStitle());
        st.setScontent(data.getScontent());
        st.setSnum(data.getSnum());
        st.setSuid(data.getSuid());
        Timestamp now = new Timestamp(System.currentTimeMillis());
        st.setStime(now);
        st.setStid(0);
        st.setSprice(data.getSprice());
        st.setSlng(data.getSlng());
        st.setSlat(data.getSlat());
        st.setIsdelete('0');
        int result = storeMapper.insert(st);
        if(result == 1) {
//            查当前sid
            return st.getSid();
        }
        return 0;
    }

//    改
    @PostMapping("/updateStore")
    @ResponseBody
    public int updateStore(@RequestBody Store data) {
        System.out.println(data);
        Store st = new Store();
        st.setSid(data.getSid());
        st.setStitle(data.getStitle());
        st.setScontent(data.getScontent());
        st.setSnum(data.getSnum());
        st.setSuid(data.getSuid());
        Timestamp now = new Timestamp(System.currentTimeMillis());
        st.setStime(now);
        st.setStid(0);
        st.setSprice(data.getSprice());
        st.setSlng(data.getSlng());
        st.setSlat(data.getSlat());
        st.setIsdelete(data.getIsdelete());
        int result = storeMapper.updateById(st);
        return result;
    }
//  删除
    @PostMapping("/delStore")
    @ResponseBody
    public int delStore(@RequestBody Store data) {
        System.out.println(data);
        Store st = new Store();
        st.setSid(data.getSid());
        st.setStitle(data.getStitle());
        st.setScontent(data.getScontent());
        st.setSnum(data.getSnum());
        st.setSuid(data.getSuid());
        Timestamp now = new Timestamp(System.currentTimeMillis());
        st.setStime(now);
        st.setStid(0);
        st.setSprice(data.getSprice());
        st.setSlng(data.getSlng());
        st.setSlat(data.getSlat());
        st.setIsdelete('1');
        int result = storeMapper.updateById(st);
        return result;
    }

}
